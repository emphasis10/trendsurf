version: "3.9"

networks:
  trendsurf:
    driver: bridge

volumes:
  postgres_data:
  qdrant_data:
  grobid_cache:

services:
  api:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    command: uvicorn trendsurf_api.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - ../../.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_healthy
        
    ports:
      - "8000:8000"
    volumes:
      - ../../apps/api/src:/app/src
    networks:
      - trendsurf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3

  worker:
    build:
      context: ../../apps/worker
      dockerfile: Dockerfile
    command: python -m trendsurf_worker.main
    env_file:
      - ../../.env
    depends_on:
      redis:
        condition: service_started
      api:
        condition: service_healthy
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    volumes:
      - ../../apps/api/src:/deps/api
      - ../../apps/worker/src:/app/src
    networks:
      - trendsurf

  frontend:
    build:
      context: ../../apps/frontend
      dockerfile: Dockerfile
    env_file:
      - ../../.env
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ../../apps/frontend:/app
    networks:
      - trendsurf

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trendsurf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - trendsurf

  qdrant:
    image: qdrant/qdrant:v1.9.0
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - trendsurf
    healthcheck:
      test: ["CMD", "bash", "-c", "exec 3<>/dev/tcp/localhost/6333 && echo -e 'GET /readyz HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && grep -q 'HTTP/1.1 200' <&3"]
      interval: 10s
      timeout: 5s
      retries: 5

  grobid:
    image: lfoppiano/grobid:0.7.1
    ports:
      - "8070:8070"
    environment:
      GROBID_HOME: /opt/grobid/grobid-home
    volumes:
      - grobid_cache:/opt/grobid/grobid-home/tmp
    networks:
      - trendsurf
